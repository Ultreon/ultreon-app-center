[package]
name = "ultreon-app-center"
version = "0.1.1"
description = "An app center for apps by Ultreon"
authors = ["Ultreon", "XyperCode"]
license = ""
repository = "https://github.com/Ultreon/ultreon-app-center"
default-run = "ultreon-app-center"
edition = "2021"
rust-version = "1.71.0"

# See more keys and their definitionsV at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "ultreon-app-center"
path = "src/main.rs"

[build-dependencies]
tauri-build = { version = "1.5.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5.2", features = [ "macos-private-api", "dialog-all", "window-all", "os-all", "fs-all", "path-all", "dialog" ] }
msgbox = "0.7.0"
zip = "0.6.6"
flate2 = "1.0"
tar = "0.4"
anyhow = "1.0.75"
thiserror = "1.0.50"
reqwest = { version = "0.12.2", features = ["blocking", "stream", "json"] }
indicatif = "0.17.7"
tokio = { version = "1.13.0", features = ["full"] }
tokio-stream = "0.1.14"
futures-util = "0.3.29"
semver = "1.0.20"

[dependencies.uuid]
version = "1.6.1"
features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = [ "tauri/custom-protocol" ]
